{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","TodoListItem","this","props","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","type","Component","TodoList","todos","elements","map","item","id","itemProps","key","SearchPanel","state","term","onSearchChange","event","target","value","setState","placeholder","onChange","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","addItem","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","before","slice","after","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7da64ab1.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\n\r\nexport default AppHeader;","import React from 'react'\r\nimport './app-header.css';\r\n\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n      <div className=\"app-header d-flex\">\r\n        <h1>To do List</h1>\r\n        <h2>{toDo} more to do, {done} done</h2>\r\n      </div>\r\n      \r\n    )\r\n  };\r\n\r\n  export default AppHeader;","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, {Component} from 'react';\r\nimport './todo-list-item.css';\r\n\r\n\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n\r\n    render () {\r\n\r\n        const {label, onDeleted, onToggleImportant, onToggleDone, done, important } = this.props;\r\n        \r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if(important) {\r\n            classNames += ' important'\r\n        }\r\n        return (\r\n    \r\n            <span className={classNames}>\r\n                <span\r\n                    className=\"todo-list-item-label\"\r\n                    onClick={ onToggleDone }>\r\n                    { label }\r\n                </span>\r\n\r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-success btn-sm float-right\"\r\n                        onClick={ onToggleImportant } >     \r\n                    <i className=\"fa fa-exclamation\"></i>\r\n                </button>\r\n    \r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-danger btn-sm float-right\"\r\n                        onClick={onDeleted}>\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                </button>\r\n            </span>\r\n        )\r\n    };\r\n    \r\n}\r\n\r\n\r\n\r\n \r\n\r\n\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\n\r\nconst TodoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\r\n\r\n    const elements = todos.map((item) => {\r\n\r\n        const {id, ...itemProps} = item;\r\n\r\n        return ( \r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem {...itemProps} \r\n                onDeleted={()=> onDeleted(id)}\r\n                onToggleImportant = {() => onToggleImportant(id)}\r\n                onToggleDone = {() => onToggleDone(id)}/>       \r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n      <ul className=\"list-group todo-list\">\r\n        {elements}\r\n      </ul>\r\n    )\r\n  };\r\n\r\n  export default TodoList;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n  state = {\r\n    term: ''\r\n  };\r\n\r\n  onSearchChange = (event) => {\r\n    const term = event.target.value;\r\n    this.setState({term});\r\n    this.props.onSearchChange(term)\r\n  }\r\n\r\n  render() {\r\n\r\n    return ( \r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control search-input\"\r\n        placeholder=\"type to search\"\r\n        value={this.state.term}\r\n        onChange={this.onSearchChange}\r\n        />\r\n    )\r\n  }\r\n    \r\n};","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\nimport './item-status-filter.css';\r\n\r\n\r\n\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        {name : 'all', label: 'All'},\r\n        {name : 'active', label: 'Active'},\r\n        {name : 'done', label: 'Done'}\r\n    ];\r\n\r\n\r\n\r\n    render () {\r\n\r\n        const {filter, onFilterChange} = this.props;\r\n\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\r\n            return (\r\n                <button type=\"button\"\r\n                        className={`btn ${clazz}`}\r\n                        key={name}\r\n                        onClick={()=> onFilterChange(name)}>\r\n                        {label}</button>\r\n            )\r\n        })\r\n       \r\n        return(\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n ","import ItemAddForm from './item-add-form';\r\n\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\nimport './item-add-form.css';\r\n\r\n\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange =  (event) => {\r\n        this.setState({\r\n            label: event.target.value\r\n        })\r\n    };\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.addItem(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    }\r\n\r\n    render () {\r\n       \r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                \r\n                <input type=\"text\"\r\n                       className=\"form-control\"\r\n                       onChange={this.onLabelChange}\r\n                       placeholder=\"what needs to be done\"\r\n                       value={this.state.label} />\r\n                <button\r\n                className=\"btn btn-outline-secondary\">\r\n                Add </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport AppHeader from '../app-header';\r\nimport TodoList from '../todo-list';\r\nimport SearchPanel from '../search-panel';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\n\r\nexport default class App extends Component  {\r\n\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink Coffe'),\r\n      this.createTodoItem('Make Awesome App'),\r\n      this.createTodoItem('Have a lunch'),\r\n    ],\r\n    term: '',\r\n    filter: 'all' //active, all, done\r\n  };\r\n\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    }\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState( ({todoData}) => {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n      \r\n      const before = todoData.slice(0, idx);\r\n      const after = todoData.slice(idx + 1);\r\n      const newTodoData = [...before, ...after]\r\n\r\n      return {\r\n        todoData: newTodoData\r\n      };\r\n    });\r\n  }\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n    this.setState(({todoData}) => {\r\n      const newArray = [\r\n        ...todoData,\r\n        newItem\r\n      ];\r\n      return {\r\n        todoData: newArray\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  toggleProperty (arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n      //update object\r\n      const oldItem = arr[idx];\r\n      const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n      //construct new Array\r\n      return [\r\n        ...arr.slice(0, idx),\r\n        newItem,\r\n        ...arr.slice(idx + 1)\r\n      ];   \r\n  }\r\n\r\n  \r\n  onToggleImportant = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      }\r\n    }); \r\n  };\r\n\r\n  onToggleDone = (id) => {\r\n      this.setState(({todoData}) => { \r\n        return {\r\n          todoData: this.toggleProperty(todoData, id, 'done')\r\n        }\r\n      });     \r\n  };\r\n\r\n\r\n  search(items, term) {\r\n    if(term.length === 0) {\r\n      return items;\r\n    }\r\n     return items.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1\r\n    })\r\n  }\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({term});\r\n  }\r\n\r\n\r\n  filter(items, filter) {\r\n    switch(filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({filter});\r\n  }\r\n   \r\n    render () {\r\n      const {todoData, term, filter} = this.state;\r\n\r\n      const visibleItems = this.filter(\r\n        this.search(todoData, term), filter);\r\n\r\n      const doneCount = todoData.filter((el) => el.done).length;\r\n\r\n      const todoCount = todoData.length - doneCount;\r\n\r\n\r\n      return (\r\n        <div className=\"todo-app\">\r\n          <AppHeader toDo={todoCount} done={doneCount}/>\r\n          <div className=\"top-panel d-flex\">\r\n            <SearchPanel \r\n              onSearchChange={this.onSearchChange}/>\r\n            <ItemStatusFilter \r\n              filter={filter}\r\n              onFilterChange = {this.onFilterChange}/>\r\n          </div>\r\n\r\n          <TodoList \r\n            todos={visibleItems}\r\n            onDeleted={this.deleteItem}\r\n            onToggleImportant={this.onToggleImportant}\r\n            onToggleDone={this.onToggleDone}\r\n            />\r\n\r\n          <ItemAddForm \r\n            addItem={this.addItem}/>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\n\n\n\n\n  \n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}